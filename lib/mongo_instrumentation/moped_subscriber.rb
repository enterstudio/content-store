module MongoInstrumentation
  # Object for consuming ActiveSupport::Notifications generated by the moped gem
  # that drives mongoid.
  #
  # The only topic that we are currently interested in is "query.moped", which
  # is instrumented on every MongoDB query. When this notification is
  # dispatched, the event is pased to the `query` method.
  #
  # This uses `MongoInstrumentation::RuntimeRegistry` to store the cumulative
  # duration of mongo queries.
  class MopedSubscriber < ActiveSupport::LogSubscriber
    def self.runtime=(value)
      MongoInstrumentation::RuntimeRegistry.mongo_runtime = value
    end

    def self.runtime
      MongoInstrumentation::RuntimeRegistry.mongo_runtime ||= 0
    end

    def self.query_count=(value)
      MongoInstrumentation::RuntimeRegistry.mongo_query_count = value
    end

    def self.query_count
      MongoInstrumentation::RuntimeRegistry.mongo_query_count ||= 0
    end

    def self.reset_instruments
      self.runtime =  0
      self.query_count =  0
    end

    # The event handler for "query.moped" notifications.
    def query(event)
      self.class.query_count += 1
      self.class.runtime += event.duration
    end
  end
end

MongoInstrumentation::MopedSubscriber.attach_to :moped
